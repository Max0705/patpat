package com.etc.entity;

import java.util.ArrayList;
import java.util.List;

public class AprioriresultExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public AprioriresultExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAprioriidIsNull() {
            addCriterion("AprioriId is null");
            return (Criteria) this;
        }

        public Criteria andAprioriidIsNotNull() {
            addCriterion("AprioriId is not null");
            return (Criteria) this;
        }

        public Criteria andAprioriidEqualTo(Integer value) {
            addCriterion("AprioriId =", value, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidNotEqualTo(Integer value) {
            addCriterion("AprioriId <>", value, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidGreaterThan(Integer value) {
            addCriterion("AprioriId >", value, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidGreaterThanOrEqualTo(Integer value) {
            addCriterion("AprioriId >=", value, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidLessThan(Integer value) {
            addCriterion("AprioriId <", value, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidLessThanOrEqualTo(Integer value) {
            addCriterion("AprioriId <=", value, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidIn(List<Integer> values) {
            addCriterion("AprioriId in", values, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidNotIn(List<Integer> values) {
            addCriterion("AprioriId not in", values, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidBetween(Integer value1, Integer value2) {
            addCriterion("AprioriId between", value1, value2, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andAprioriidNotBetween(Integer value1, Integer value2) {
            addCriterion("AprioriId not between", value1, value2, "aprioriid");
            return (Criteria) this;
        }

        public Criteria andFrequentIsNull() {
            addCriterion("frequent is null");
            return (Criteria) this;
        }

        public Criteria andFrequentIsNotNull() {
            addCriterion("frequent is not null");
            return (Criteria) this;
        }

        public Criteria andFrequentEqualTo(String value) {
            addCriterion("frequent =", value, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentNotEqualTo(String value) {
            addCriterion("frequent <>", value, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentGreaterThan(String value) {
            addCriterion("frequent >", value, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentGreaterThanOrEqualTo(String value) {
            addCriterion("frequent >=", value, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentLessThan(String value) {
            addCriterion("frequent <", value, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentLessThanOrEqualTo(String value) {
            addCriterion("frequent <=", value, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentLike(String value) {
            addCriterion("frequent like", value, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentNotLike(String value) {
            addCriterion("frequent not like", value, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentIn(List<String> values) {
            addCriterion("frequent in", values, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentNotIn(List<String> values) {
            addCriterion("frequent not in", values, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentBetween(String value1, String value2) {
            addCriterion("frequent between", value1, value2, "frequent");
            return (Criteria) this;
        }

        public Criteria andFrequentNotBetween(String value1, String value2) {
            addCriterion("frequent not between", value1, value2, "frequent");
            return (Criteria) this;
        }

        public Criteria andSupportIsNull() {
            addCriterion("support is null");
            return (Criteria) this;
        }

        public Criteria andSupportIsNotNull() {
            addCriterion("support is not null");
            return (Criteria) this;
        }

        public Criteria andSupportEqualTo(Double value) {
            addCriterion("support =", value, "support");
            return (Criteria) this;
        }

        public Criteria andSupportNotEqualTo(Double value) {
            addCriterion("support <>", value, "support");
            return (Criteria) this;
        }

        public Criteria andSupportGreaterThan(Double value) {
            addCriterion("support >", value, "support");
            return (Criteria) this;
        }

        public Criteria andSupportGreaterThanOrEqualTo(Double value) {
            addCriterion("support >=", value, "support");
            return (Criteria) this;
        }

        public Criteria andSupportLessThan(Double value) {
            addCriterion("support <", value, "support");
            return (Criteria) this;
        }

        public Criteria andSupportLessThanOrEqualTo(Double value) {
            addCriterion("support <=", value, "support");
            return (Criteria) this;
        }

        public Criteria andSupportIn(List<Double> values) {
            addCriterion("support in", values, "support");
            return (Criteria) this;
        }

        public Criteria andSupportNotIn(List<Double> values) {
            addCriterion("support not in", values, "support");
            return (Criteria) this;
        }

        public Criteria andSupportBetween(Double value1, Double value2) {
            addCriterion("support between", value1, value2, "support");
            return (Criteria) this;
        }

        public Criteria andSupportNotBetween(Double value1, Double value2) {
            addCriterion("support not between", value1, value2, "support");
            return (Criteria) this;
        }

        public Criteria andTimesIsNull() {
            addCriterion("times is null");
            return (Criteria) this;
        }

        public Criteria andTimesIsNotNull() {
            addCriterion("times is not null");
            return (Criteria) this;
        }

        public Criteria andTimesEqualTo(Integer value) {
            addCriterion("times =", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesNotEqualTo(Integer value) {
            addCriterion("times <>", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesGreaterThan(Integer value) {
            addCriterion("times >", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("times >=", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesLessThan(Integer value) {
            addCriterion("times <", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesLessThanOrEqualTo(Integer value) {
            addCriterion("times <=", value, "times");
            return (Criteria) this;
        }

        public Criteria andTimesIn(List<Integer> values) {
            addCriterion("times in", values, "times");
            return (Criteria) this;
        }

        public Criteria andTimesNotIn(List<Integer> values) {
            addCriterion("times not in", values, "times");
            return (Criteria) this;
        }

        public Criteria andTimesBetween(Integer value1, Integer value2) {
            addCriterion("times between", value1, value2, "times");
            return (Criteria) this;
        }

        public Criteria andTimesNotBetween(Integer value1, Integer value2) {
            addCriterion("times not between", value1, value2, "times");
            return (Criteria) this;
        }

        public Criteria andSizeIsNull() {
            addCriterion("size is null");
            return (Criteria) this;
        }

        public Criteria andSizeIsNotNull() {
            addCriterion("size is not null");
            return (Criteria) this;
        }

        public Criteria andSizeEqualTo(Integer value) {
            addCriterion("size =", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeNotEqualTo(Integer value) {
            addCriterion("size <>", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeGreaterThan(Integer value) {
            addCriterion("size >", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeGreaterThanOrEqualTo(Integer value) {
            addCriterion("size >=", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeLessThan(Integer value) {
            addCriterion("size <", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeLessThanOrEqualTo(Integer value) {
            addCriterion("size <=", value, "size");
            return (Criteria) this;
        }

        public Criteria andSizeIn(List<Integer> values) {
            addCriterion("size in", values, "size");
            return (Criteria) this;
        }

        public Criteria andSizeNotIn(List<Integer> values) {
            addCriterion("size not in", values, "size");
            return (Criteria) this;
        }

        public Criteria andSizeBetween(Integer value1, Integer value2) {
            addCriterion("size between", value1, value2, "size");
            return (Criteria) this;
        }

        public Criteria andSizeNotBetween(Integer value1, Integer value2) {
            addCriterion("size not between", value1, value2, "size");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AprioriResult
     *
     * @mbggenerated do_not_delete_during_merge Mon Jul 23 15:55:20 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AprioriResult
     *
     * @mbggenerated Mon Jul 23 15:55:20 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}