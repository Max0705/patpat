package com.etc.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CommentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public CommentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCommentidIsNull() {
            addCriterion("commentId is null");
            return (Criteria) this;
        }

        public Criteria andCommentidIsNotNull() {
            addCriterion("commentId is not null");
            return (Criteria) this;
        }

        public Criteria andCommentidEqualTo(Integer value) {
            addCriterion("commentId =", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidNotEqualTo(Integer value) {
            addCriterion("commentId <>", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidGreaterThan(Integer value) {
            addCriterion("commentId >", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidGreaterThanOrEqualTo(Integer value) {
            addCriterion("commentId >=", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidLessThan(Integer value) {
            addCriterion("commentId <", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidLessThanOrEqualTo(Integer value) {
            addCriterion("commentId <=", value, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidIn(List<Integer> values) {
            addCriterion("commentId in", values, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidNotIn(List<Integer> values) {
            addCriterion("commentId not in", values, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidBetween(Integer value1, Integer value2) {
            addCriterion("commentId between", value1, value2, "commentid");
            return (Criteria) this;
        }

        public Criteria andCommentidNotBetween(Integer value1, Integer value2) {
            addCriterion("commentId not between", value1, value2, "commentid");
            return (Criteria) this;
        }

        public Criteria andLastidIsNull() {
            addCriterion("lastId is null");
            return (Criteria) this;
        }

        public Criteria andLastidIsNotNull() {
            addCriterion("lastId is not null");
            return (Criteria) this;
        }

        public Criteria andLastidEqualTo(Integer value) {
            addCriterion("lastId =", value, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidNotEqualTo(Integer value) {
            addCriterion("lastId <>", value, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidGreaterThan(Integer value) {
            addCriterion("lastId >", value, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidGreaterThanOrEqualTo(Integer value) {
            addCriterion("lastId >=", value, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidLessThan(Integer value) {
            addCriterion("lastId <", value, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidLessThanOrEqualTo(Integer value) {
            addCriterion("lastId <=", value, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidIn(List<Integer> values) {
            addCriterion("lastId in", values, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidNotIn(List<Integer> values) {
            addCriterion("lastId not in", values, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidBetween(Integer value1, Integer value2) {
            addCriterion("lastId between", value1, value2, "lastid");
            return (Criteria) this;
        }

        public Criteria andLastidNotBetween(Integer value1, Integer value2) {
            addCriterion("lastId not between", value1, value2, "lastid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userId =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userId >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userId <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userId in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andAppidIsNull() {
            addCriterion("appId is null");
            return (Criteria) this;
        }

        public Criteria andAppidIsNotNull() {
            addCriterion("appId is not null");
            return (Criteria) this;
        }

        public Criteria andAppidEqualTo(Integer value) {
            addCriterion("appId =", value, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidNotEqualTo(Integer value) {
            addCriterion("appId <>", value, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidGreaterThan(Integer value) {
            addCriterion("appId >", value, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidGreaterThanOrEqualTo(Integer value) {
            addCriterion("appId >=", value, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidLessThan(Integer value) {
            addCriterion("appId <", value, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidLessThanOrEqualTo(Integer value) {
            addCriterion("appId <=", value, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidIn(List<Integer> values) {
            addCriterion("appId in", values, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidNotIn(List<Integer> values) {
            addCriterion("appId not in", values, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidBetween(Integer value1, Integer value2) {
            addCriterion("appId between", value1, value2, "appid");
            return (Criteria) this;
        }

        public Criteria andAppidNotBetween(Integer value1, Integer value2) {
            addCriterion("appId not between", value1, value2, "appid");
            return (Criteria) this;
        }

        public Criteria andCommentscoreIsNull() {
            addCriterion("commentScore is null");
            return (Criteria) this;
        }

        public Criteria andCommentscoreIsNotNull() {
            addCriterion("commentScore is not null");
            return (Criteria) this;
        }

        public Criteria andCommentscoreEqualTo(Integer value) {
            addCriterion("commentScore =", value, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreNotEqualTo(Integer value) {
            addCriterion("commentScore <>", value, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreGreaterThan(Integer value) {
            addCriterion("commentScore >", value, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("commentScore >=", value, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreLessThan(Integer value) {
            addCriterion("commentScore <", value, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreLessThanOrEqualTo(Integer value) {
            addCriterion("commentScore <=", value, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreIn(List<Integer> values) {
            addCriterion("commentScore in", values, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreNotIn(List<Integer> values) {
            addCriterion("commentScore not in", values, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreBetween(Integer value1, Integer value2) {
            addCriterion("commentScore between", value1, value2, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentscoreNotBetween(Integer value1, Integer value2) {
            addCriterion("commentScore not between", value1, value2, "commentscore");
            return (Criteria) this;
        }

        public Criteria andCommentdateIsNull() {
            addCriterion("commentDate is null");
            return (Criteria) this;
        }

        public Criteria andCommentdateIsNotNull() {
            addCriterion("commentDate is not null");
            return (Criteria) this;
        }

        public Criteria andCommentdateEqualTo(Date value) {
            addCriterion("commentDate =", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateNotEqualTo(Date value) {
            addCriterion("commentDate <>", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateGreaterThan(Date value) {
            addCriterion("commentDate >", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateGreaterThanOrEqualTo(Date value) {
            addCriterion("commentDate >=", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateLessThan(Date value) {
            addCriterion("commentDate <", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateLessThanOrEqualTo(Date value) {
            addCriterion("commentDate <=", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateIn(List<Date> values) {
            addCriterion("commentDate in", values, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateNotIn(List<Date> values) {
            addCriterion("commentDate not in", values, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateBetween(Date value1, Date value2) {
            addCriterion("commentDate between", value1, value2, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateNotBetween(Date value1, Date value2) {
            addCriterion("commentDate not between", value1, value2, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentlikeIsNull() {
            addCriterion("commentLike is null");
            return (Criteria) this;
        }

        public Criteria andCommentlikeIsNotNull() {
            addCriterion("commentLike is not null");
            return (Criteria) this;
        }

        public Criteria andCommentlikeEqualTo(Integer value) {
            addCriterion("commentLike =", value, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeNotEqualTo(Integer value) {
            addCriterion("commentLike <>", value, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeGreaterThan(Integer value) {
            addCriterion("commentLike >", value, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeGreaterThanOrEqualTo(Integer value) {
            addCriterion("commentLike >=", value, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeLessThan(Integer value) {
            addCriterion("commentLike <", value, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeLessThanOrEqualTo(Integer value) {
            addCriterion("commentLike <=", value, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeIn(List<Integer> values) {
            addCriterion("commentLike in", values, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeNotIn(List<Integer> values) {
            addCriterion("commentLike not in", values, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeBetween(Integer value1, Integer value2) {
            addCriterion("commentLike between", value1, value2, "commentlike");
            return (Criteria) this;
        }

        public Criteria andCommentlikeNotBetween(Integer value1, Integer value2) {
            addCriterion("commentLike not between", value1, value2, "commentlike");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbggenerated do_not_delete_during_merge Thu Jul 19 15:40:10 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbggenerated Thu Jul 19 15:40:10 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}